name: deploy-prod
on:
  push:
    branches:
      - "main"
      - "7-remove-netlify"
jobs:
  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-20.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: khashayarmirms/patterns-blue:latest
  deploy:
    name: Deploy on production server
    needs: build-docker-image
    runs-on: ubuntu-20.04
    steps:
      - name: Create docker-compose-postgres.env
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          directory: .
          file_name: docker-compose-postgres.env
          fail_on_empty: false
      - name: Create docker-compose.env
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: production
          envkey_SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          envkey_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          envkey_SUPABASE_URL: https://xwjlbwqfnwrigtkidycm.supabase.co
          envkey_SERVER_URL: https://patterns.blue
          envkey_DATABASE_URL: "postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.POSTGRES_HOST }}:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}"
          directory: .
          file_name: docker-compose.env
          fail_on_empty: false
      - name: Add SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOYER_KEY }}
          known_hosts: "placeholder"
      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Add deployment files to server
        run: rsync -avz docker-compose.yml docker-compose.env docker-compose-postgres.env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/patterns-blue/
      - name: Run the code
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd patterns-blue/ && docker compose up -d'
